{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/algorithms/buy-apple/buy-apple.component.css","webpack:///./src/app/algorithms/buy-apple/buy-apple.component.html","webpack:///./src/app/algorithms/buy-apple/buy-apple.component.ts","webpack:///./src/app/algorithms/mean-reversion/mean-reversion.component.css","webpack:///./src/app/algorithms/mean-reversion/mean-reversion.component.html","webpack:///./src/app/algorithms/mean-reversion/mean-reversion.component.ts","webpack:///./src/app/algorithms/rand-forest-reg/rand-forest-reg.component.css","webpack:///./src/app/algorithms/rand-forest-reg/rand-forest-reg.component.html","webpack:///./src/app/algorithms/rand-forest-reg/rand-forest-reg.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/builder/builder.component.css","webpack:///./src/app/builder/builder.component.html","webpack:///./src/app/builder/builder.component.ts","webpack:///./src/app/graph/graph.component.css","webpack:///./src/app/graph/graph.component.html","webpack:///./src/app/graph/graph.component.ts","webpack:///./src/app/intro/intro.component.css","webpack:///./src/app/intro/intro.component.html","webpack:///./src/app/intro/intro.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/select-algo/select-algo.component.css","webpack:///./src/app/select-algo/select-algo.component.html","webpack:///./src/app/select-algo/select-algo.component.ts","webpack:///./src/app/services/result.service.ts","webpack:///./src/app/tutorial/tutorial.component.css","webpack:///./src/app/tutorial/tutorial.component.html","webpack:///./src/app/tutorial/tutorial.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".body {\\r\\n  padding-top: 65px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"body\\\" id=\\\"top\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"py-5 text-center\\\">\\r\\n        <img class=\\\"d-block mx-auto mb-4\\\" src=\\\"../../../assets/icons/candlesticks.png\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\r\\n        <h2>Buy Apple Everyday</h2>\\r\\n        <h4>Class: Naive Algorithm</h4>\\r\\n        <p class=\\\"lead\\\">Everyday at market open, buy a set amount of Apple Stocks (AAPL) until you run out of money.\\r\\n        How much return will you have at the end of the trading period?</p>\\r\\n      </div>\\r\\n    <mat-vertical-stepper [linear]=\\\"false\\\" #stepper>\\r\\n      <mat-step [stepControl]=\\\"firstForm\\\">\\r\\n        <form [formGroup]=\\\"firstForm\\\">\\r\\n          <ng-template matStepLabel>Basic Configuration</ng-template>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4 mb-3\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Simulation Start\\\"\\r\\n                       [value]=\\\"startDate.value\\\" [(ngModel)]=\\\"startDate.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #picker1></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 mb-3\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Simulation End\\\"\\r\\n                       [value]=\\\"endDate.value\\\" [(ngModel)]=\\\"endDate.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #picker2></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4 mb-3\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                <input matInput type=\\\"number\\\" placeholder=\\\"Initial Capital Base\\\"\\r\\n                       [value]=\\\"capitalBase\\\" [(ngModel)]=\\\"capitalBase\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"secondForm\\\">\\r\\n        <form [formGroup]=\\\"secondForm\\\">\\r\\n          <ng-template matStepLabel>How Many Shares to Buy Per Day</ng-template>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 mb-3\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput type=\\\"number\\\" placeholder=\\\"# of Shares To Buy\\\"\\r\\n                       [value]=\\\"numOfShares\\\" [(ngModel)]=\\\"numOfShares\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"thirdForm\\\">\\r\\n        <form [formGroup]=\\\"thirdForm\\\">\\r\\n          <ng-template matStepLabel>Done</ng-template>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 mb-3\\\">\\r\\n              <button mat-button (click)=\\\"onDoneClick()\\\">Begin Trading</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-step>\\r\\n    </mat-vertical-stepper>\\r\\n  </div>\\r\\n</div>\\r\\n  <div id=\\\"results\\\">\\r\\n    <ng-container *ngIf=\\\"beginSim\\\">\\r\\n      <div class=\\\"body\\\">\\r\\n        <app-graph [type]=\\\"'apple'\\\"\\r\\n                   [start]=\\\"getDate(startDate)\\\"\\r\\n                   [end]=\\\"getDate(endDate)\\\"\\r\\n                   [capitalBase]=\\\"capitalBase\\\"\\r\\n                   [numberOfShares]=\\\"numOfShares\\\"></app-graph>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ScrollToService} from \"@nicky-lenaers/ngx-scroll-to\";\r\n\r\n@Component({\r\n  selector: 'app-buy-apple',\r\n  templateUrl: './buy-apple.component.html',\r\n  styleUrls: ['./buy-apple.component.css']\r\n})\r\nexport class BuyAppleComponent implements OnInit {\r\n\r\n  public firstForm : FormGroup;\r\n  public secondForm : FormGroup;\r\n  public thirdForm : FormGroup;\r\n\r\n  public startDate : FormControl;\r\n  public endDate : FormControl;\r\n\r\n  public capitalBase : number;\r\n  public numOfShares : number;\r\n\r\n  public beginSim : boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private scroll: ScrollToService) { }\r\n\r\n  ngOnInit() {\r\n    this.scroll.scrollTo({\r\n      target: 'top'\r\n    });\r\n\r\n    this.firstForm =  this.formBuilder.group({firstCtrl: ['', Validators.required]});\r\n    this.secondForm = this.formBuilder.group({secondCtrl: ['', Validators.required]});\r\n    this.thirdForm = this.formBuilder.group({thirdCtrl: ['', Validators.required]});\r\n\r\n    let start = new Date();\r\n    start.setFullYear(2017);\r\n    start.setMonth(3);\r\n    start.setDate(1);\r\n\r\n    this.startDate = new FormControl(start);\r\n\r\n    let end = new Date();\r\n    end.setFullYear(2018);\r\n    end.setMonth(3);\r\n    end.setDate(1);\r\n\r\n    this.endDate = new FormControl(end);\r\n\r\n    this.capitalBase = 1000000;\r\n    this.numOfShares = 50;\r\n    this.beginSim = false;\r\n  }\r\n\r\n  onDoneClick() {\r\n\r\n    this.scroll.scrollTo({\r\n      target: \"results\"\r\n    });\r\n    this.beginSim = true;\r\n\r\n  }\r\n\r\n  getDate(form: FormControl) {\r\n    return form.value.toISOString().substring(0, 10);\r\n  }\r\n\r\n}\r\n","module.exports = \".body {\\r\\n  padding-top: 65px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"body\\\" id=\\\"top\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"py-5 text-center\\\">\\r\\n        <img class=\\\"d-block mx-auto mb-4\\\" src=\\\"../../../assets/icons/candlesticks.png\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\r\\n        <h2>Mean Reversion</h2>\\r\\n        <h4>Class: Advanced Algorithm</h4>\\r\\n        <p class=\\\"lead\\\">Every 20 days at market open, filter out only the top 1% of stocks by Average Dollar Volume.\\r\\n        If the price of any of these stocks is below the Lower Bollinger Band, buy a set number of shares.\\r\\n        If the price is above the Upper Bollinger Band, sell a set number of shares.</p>\\r\\n      </div>\\r\\n      <mat-vertical-stepper [linear]=\\\"false\\\" #stepper>\\r\\n        <mat-step [stepControl]=\\\"firstForm\\\">\\r\\n          <form [formGroup]=\\\"firstForm\\\">\\r\\n            <ng-template matStepLabel>Basic Configuration</ng-template>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Simulation Start\\\"\\r\\n                         [value]=\\\"startDate.value\\\" [(ngModel)]=\\\"startDate.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #picker1></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Simulation End\\\"\\r\\n                         [value]=\\\"endDate.value\\\" [(ngModel)]=\\\"endDate.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #picker2></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"Initial Capital Base\\\"\\r\\n                         [value]=\\\"capitalBase\\\" [(ngModel)]=\\\"capitalBase\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"secondForm\\\">\\r\\n          <form [formGroup]=\\\"secondForm\\\">\\r\\n            <ng-template matStepLabel>How Many Shares to Trade Per Transaction</ng-template>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"# of Shares To Trade\\\"\\r\\n                         [value]=\\\"numOfShares\\\" [(ngModel)]=\\\"numOfShares\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"thirdForm\\\">\\r\\n          <form [formGroup]=\\\"thirdForm\\\">\\r\\n            <ng-template matStepLabel>Done</ng-template>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 mb-3\\\">\\r\\n                <button mat-button (click)=\\\"onDoneClick()\\\">Begin Trading</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-step>\\r\\n      </mat-vertical-stepper>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=\\\"results\\\">\\r\\n    <ng-container *ngIf=\\\"beginSim\\\">\\r\\n      <div class=\\\"body\\\">\\r\\n        <app-graph [type]=\\\"'mean-rev'\\\"\\r\\n                   [start]=\\\"getDate(startDate)\\\"\\r\\n                   [end]=\\\"getDate(endDate)\\\"\\r\\n                   [capitalBase]=\\\"capitalBase\\\"\\r\\n                   [numberOfShares]=\\\"numOfShares\\\"></app-graph>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ScrollToService} from \"@nicky-lenaers/ngx-scroll-to\";\r\n\r\n@Component({\r\n  selector: 'app-mean-reversion',\r\n  templateUrl: './mean-reversion.component.html',\r\n  styleUrls: ['./mean-reversion.component.css']\r\n})\r\nexport class MeanReversionComponent implements OnInit {\r\n\r\n  public firstForm : FormGroup;\r\n  public secondForm : FormGroup;\r\n  public thirdForm : FormGroup;\r\n\r\n  public startDate : FormControl;\r\n  public endDate : FormControl;\r\n\r\n  public capitalBase : number;\r\n  public numOfShares: number;\r\n\r\n  public beginSim : boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private scroll: ScrollToService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.scroll.scrollTo({\r\n      target: 'top'\r\n    });\r\n\r\n    this.firstForm =  this.formBuilder.group({firstCtrl: ['', Validators.required]});\r\n    this.secondForm = this.formBuilder.group({secondCtrl: ['', Validators.required]});\r\n    this.thirdForm = this.formBuilder.group({thirdCtrl: ['', Validators.required]});\r\n\r\n    let start = new Date();\r\n    start.setFullYear(2017);\r\n    start.setMonth(3);\r\n    start.setDate(1);\r\n\r\n    this.startDate = new FormControl(start);\r\n\r\n    let end = new Date();\r\n    end.setFullYear(2018);\r\n    end.setMonth(3);\r\n    end.setDate(1);\r\n\r\n    this.endDate = new FormControl(end);\r\n\r\n    this.capitalBase = 1000000;\r\n    this.numOfShares = 300;\r\n    this.beginSim = false;\r\n  }\r\n\r\n  onDoneClick() {\r\n\r\n    this.scroll.scrollTo({\r\n      target: \"results\"\r\n    });\r\n    this.beginSim = true;\r\n\r\n  }\r\n\r\n  getDate(form: FormControl) {\r\n    return form.value.toISOString().substring(0, 10);\r\n  }\r\n\r\n}\r\n","module.exports = \".body {\\r\\n  padding-top: 65px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"body\\\" id=\\\"top\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"py-5 text-center\\\">\\r\\n        <img class=\\\"d-block mx-auto mb-4\\\" src=\\\"../../../assets/icons/candlesticks.png\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\r\\n        <h2>Random Forest Regression</h2>\\r\\n        <h4>Class: Machine Learning Algorithm</h4>\\r\\n        <p class=\\\"lead\\\">At the end of every week train a Random Forest Regression model. The feature set is the last\\r\\n        400 days of price changes, and the labels are the last 3 days of prices changes. Everyday at\\r\\n        a set time after market open, predict if the price change is positive or negative. Buy or sell the stock\\r\\n        based on this prediction.</p>\\r\\n      </div>\\r\\n      <mat-vertical-stepper [linear]=\\\"false\\\" #stepper>\\r\\n        <mat-step [stepControl]=\\\"firstForm\\\">\\r\\n          <form [formGroup]=\\\"firstForm\\\">\\r\\n            <ng-template matStepLabel>Basic Configuration</ng-template>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Simulation Start\\\"\\r\\n                         [value]=\\\"startDate.value\\\" [(ngModel)]=\\\"startDate.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #picker1></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Simulation End\\\"\\r\\n                         [value]=\\\"endDate.value\\\" [(ngModel)]=\\\"endDate.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #picker2></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-icon matPrefix>attach_money</mat-icon>\\r\\n                  <input matInput type=\\\"number\\\" placeholder=\\\"Initial Capital Base\\\"\\r\\n                         [value]=\\\"capitalBase\\\" [(ngModel)]=\\\"capitalBase\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"secondForm\\\">\\r\\n          <form [formGroup]=\\\"secondForm\\\">\\r\\n            <ng-template matStepLabel>Plan Your Transactions</ng-template>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput type=\\\"text\\\" placeholder=\\\"Stock Ticker Symbol\\\"\\r\\n                         [value]=\\\"ticker\\\" [(ngModel)]=\\\"ticker\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4 mb-3\\\" style=\\\"padding-top: 2%\\\">\\r\\n                <p>Execute at {{ minutesAfterOpen }} minute(s) after market opens</p>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4 mb-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput type=\\\"number\\\"\\r\\n                         [placeholder]=\\\"'Minutes'\\\"\\r\\n                         [value]=\\\"minutesAfterOpen\\\" [(ngModel)]=\\\"minutesAfterOpen\\\"\\r\\n                         [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"thirdForm\\\">\\r\\n          <form [formGroup]=\\\"thirdForm\\\">\\r\\n            <ng-template matStepLabel>Done</ng-template>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 mb-3\\\">\\r\\n                <button mat-button (click)=\\\"onDoneClick()\\\">Begin Trading</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-step>\\r\\n      </mat-vertical-stepper>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=\\\"results\\\">\\r\\n    <ng-container *ngIf=\\\"beginSim\\\">\\r\\n      <div class=\\\"body\\\">\\r\\n        <app-graph [type]=\\\"'rfr'\\\"\\r\\n                   [start]=\\\"getDate(startDate)\\\"\\r\\n                   [end]=\\\"getDate(endDate)\\\"\\r\\n                   [capitalBase]=\\\"capitalBase\\\"\\r\\n                   [ticker]=\\\"ticker\\\"\\r\\n                   [minutes]=\\\"minutesAfterOpen\\\"></app-graph>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ScrollToService} from \"@nicky-lenaers/ngx-scroll-to\";\r\n\r\n@Component({\r\n  selector: 'app-rand-forest-reg',\r\n  templateUrl: './rand-forest-reg.component.html',\r\n  styleUrls: ['./rand-forest-reg.component.css']\r\n})\r\nexport class RandForestRegComponent implements OnInit {\r\n\r\n  public firstForm : FormGroup;\r\n  public secondForm : FormGroup;\r\n  public thirdForm : FormGroup;\r\n\r\n  public startDate : FormControl;\r\n  public endDate : FormControl;\r\n\r\n  public capitalBase : number;\r\n  public ticker : string;\r\n  public minutesAfterOpen : number;\r\n\r\n  public beginSim : boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private scroll: ScrollToService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.scroll.scrollTo({\r\n      target: 'top'\r\n    });\r\n\r\n    this.firstForm =  this.formBuilder.group({firstCtrl: ['', Validators.required]});\r\n    this.secondForm = this.formBuilder.group({secondCtrl: ['', Validators.required]});\r\n    this.thirdForm = this.formBuilder.group({thirdCtrl: ['', Validators.required]});\r\n\r\n    let start = new Date();\r\n    start.setFullYear(2017);\r\n    start.setMonth(3);\r\n    start.setDate(1);\r\n\r\n    this.startDate = new FormControl(start);\r\n\r\n    let end = new Date();\r\n    end.setFullYear(2018);\r\n    end.setMonth(3);\r\n    end.setDate(1);\r\n\r\n    this.endDate = new FormControl(end);\r\n\r\n    this.capitalBase = 1000000;\r\n    this.ticker = \"\";\r\n    this.minutesAfterOpen = 1;\r\n    this.beginSim = false;\r\n  }\r\n\r\n  onDoneClick() {\r\n\r\n    this.scroll.scrollTo({\r\n      target: \"results\"\r\n    });\r\n    this.beginSim = true;\r\n\r\n  }\r\n\r\n  getDate(form: FormControl) {\r\n    return form.value.toISOString().substring(0, 10);\r\n  }\r\n\r\n}\r\n","module.exports = \".featurette-divider {\\r\\n  margin: 5rem 0; /* Space out the Bootstrap <hr> more */\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"background-color: #EEEEEE\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n  <hr class=\\\"featurette-divider\\\">\\r\\n\\r\\n\\r\\n\\r\\n  <footer class=\\\"container py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 col-md\\\">\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n             stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"d-block mb-2\\\">\\r\\n          <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"></circle>\\r\\n          <line x1=\\\"14.31\\\" y1=\\\"8\\\" x2=\\\"20.05\\\" y2=\\\"17.94\\\"></line>\\r\\n          <line x1=\\\"9.69\\\" y1=\\\"8\\\" x2=\\\"21.17\\\" y2=\\\"8\\\"></line>\\r\\n          <line x1=\\\"7.38\\\" y1=\\\"12\\\" x2=\\\"13.12\\\" y2=\\\"2.06\\\"></line>\\r\\n          <line x1=\\\"9.69\\\" y1=\\\"16\\\" x2=\\\"3.95\\\" y2=\\\"6.06\\\"></line>\\r\\n          <line x1=\\\"14.31\\\" y1=\\\"16\\\" x2=\\\"2.83\\\" y2=\\\"16\\\"></line>\\r\\n          <line x1=\\\"16.62\\\" y1=\\\"12\\\" x2=\\\"10.88\\\" y2=\\\"21.94\\\"></line>\\r\\n        </svg>\\r\\n        <small class=\\\"d-block mb-3 text-muted\\\">&copy; 2018</small>\\r\\n      </div>\\r\\n      <div class=\\\"col-6 col-md\\\">\\r\\n        <h5>Features</h5>\\r\\n        <ul class=\\\"list-unstyled text-small\\\">\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"col-6 col-md\\\">\\r\\n        <h5>Resources</h5>\\r\\n        <ul class=\\\"list-unstyled text-small\\\">\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"col-6 col-md\\\">\\r\\n        <h5>Resources</h5>\\r\\n        <ul class=\\\"list-unstyled text-small\\\">\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"col-6 col-md\\\">\\r\\n        <h5>About</h5>\\r\\n        <ul class=\\\"list-unstyled text-small\\\">\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n          <li><a class=\\\"text-muted\\\" href=\\\"#\\\">Coming soon</a></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </footer>\\r\\n</div>\\r\\n\"","import {AfterViewInit, Component, OnInit, ElementRef} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n\r\ninterface AlgoResponse {\r\n  alpha: number,\r\n  algo_to_benchmark: string,\r\n  rolling_beta: string\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { GraphComponent } from './graph/graph.component';\r\nimport { ChartsModule } from \"ng2-charts\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NavbarComponent } from './navbar/navbar.component'\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { IntroComponent } from './intro/intro.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {\r\n  MatDatepickerModule,\r\n  MatFormFieldModule, MatIconModule, MatInputModule,\r\n  MatNativeDateModule, MatProgressSpinnerModule, MatSliderModule,\r\n  MatStepperModule,\r\n  MatToolbarModule\r\n} from \"@angular/material\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { SelectAlgoComponent } from './select-algo/select-algo.component';\r\nimport { BuyAppleComponent } from './algorithms/buy-apple/buy-apple.component';\r\nimport {ScrollToModule} from \"@nicky-lenaers/ngx-scroll-to\";\r\nimport { MeanReversionComponent } from './algorithms/mean-reversion/mean-reversion.component';\r\nimport { RandForestRegComponent } from './algorithms/rand-forest-reg/rand-forest-reg.component';\r\nimport { TutorialComponent } from './tutorial/tutorial.component';\r\nimport { BuilderComponent } from './builder/builder.component';\r\n\r\nconst appRoutes : Routes = [\r\n  { path: '', component: IntroComponent, pathMatch: 'full'},\r\n  { path: 'algorithms', component: SelectAlgoComponent },\r\n  { path: 'algorithms/buy-apple', component: BuyAppleComponent },\r\n  { path: 'algorithms/mean-reversion', component: MeanReversionComponent },\r\n  { path: 'algorithms/random-forest-regression', component: RandForestRegComponent },\r\n  { path: 'tutorial', component: TutorialComponent },\r\n  { path: 'build', component: BuilderComponent },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GraphComponent,\r\n    NavbarComponent,\r\n    IntroComponent,\r\n    SelectAlgoComponent,\r\n    BuyAppleComponent,\r\n    MeanReversionComponent,\r\n    RandForestRegComponent,\r\n    TutorialComponent,\r\n    BuilderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ChartsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    NgbModule.forRoot(),\r\n    ScrollToModule.forRoot(),\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".body {\\r\\n  padding-top: 65px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"body\\\">\\n    <h5>\\n      Coming Soon!\\n    </h5>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-builder',\n  templateUrl: './builder.component.html',\n  styleUrls: ['./builder.component.css']\n})\nexport class BuilderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".spinner {\\r\\n  padding-left: 50%;\\r\\n  padding-top: 1%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n  <form>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"exampleFormControlTextarea1\\\">Logs</label>\\r\\n      <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\"\\r\\n                rows=\\\"10\\\" [(ngModel)]=\\\"this.log\\\" name=\\\"log\\\"\\r\\n                #scrollMe [scrollTop]=\\\"scrollMe.scrollHeight\\\" readonly></textarea>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div id=\\\"graph\\\">\\r\\n    <div style=\\\"display: block; padding-top: 65px;\\\" *ngIf=\\\"done\\\">\\r\\n      <canvas baseChart [datasets]=\\\"dataset1\\\"\\r\\n              [labels]=\\\"xaxis\\\"\\r\\n              [chartType]=\\\"'line'\\\"\\r\\n              [options]=\\\"options\\\"\\r\\n              [colors]=\\\"colors\\\">\\r\\n      </canvas>\\r\\n      <canvas baseChart [datasets]=\\\"dataset2\\\"\\r\\n              [labels]=\\\"xaxis\\\"\\r\\n              [chartType]=\\\"'line'\\\"\\r\\n              [options]=\\\"options\\\">\\r\\n      </canvas>\\r\\n    </div>\\r\\n    <ng-container *ngIf=\\\"!done\\\">\\r\\n      <div class=\\\"spinner\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ResultService} from \"../services/result.service\";\r\nimport {interval} from \"rxjs\";\r\nimport {ScrollToService} from \"@nicky-lenaers/ngx-scroll-to\";\r\nimport {Subscription} from \"rxjs/internal/Subscription\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\n\r\n@Component({\r\n  selector: 'app-graph',\r\n  templateUrl: './graph.component.html',\r\n  styleUrls: ['./graph.component.css']\r\n})\r\nexport class GraphComponent implements OnInit {\r\n\r\n  @Input()\r\n  private type: string;\r\n\r\n  @Input()\r\n  private start: string;\r\n\r\n  @Input()\r\n  private end: string;\r\n\r\n  @Input()\r\n  private capitalBase: number;\r\n\r\n  @Input()\r\n  private numberOfShares: number;\r\n\r\n  @Input()\r\n  private ticker: string;\r\n\r\n  @Input()\r\n  private minutes: number;\r\n\r\n  public done: boolean;\r\n\r\n  private xaxis: string[];\r\n  private dataset1: any[];\r\n  private dataset2: any[];\r\n  private options: Object;\r\n  private colors: any[];\r\n\r\n  private logChannel: string;\r\n  private ws: WebSocket;\r\n  private log: string;\r\n\r\n  private jobId: string;\r\n  private subscription: Subscription;\r\n\r\n  constructor(private result: ResultService, private scroll: ScrollToService) {\r\n    this.done = false;\r\n    this.logChannel = null;\r\n    this.xaxis = [];\r\n    this.dataset1 = [];\r\n    this.dataset2 = [];\r\n    this.ws = null;\r\n    this.log = \"\";\r\n    this.jobId = null;\r\n    this.subscription = null;\r\n\r\n    this.options = {\r\n      responsive: true,\r\n      elements: {\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 5,\r\n        }\r\n      }\r\n    };\r\n\r\n    this.colors = [\r\n      {\r\n        backgroundColor: 'rgba(46, 134, 193,0.2)',\r\n        borderColor: 'rgba(46, 134, 193,1)',\r\n        pointBackgroundColor: 'rgba(46, 134, 193,1)',\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: 'rgba(46, 134, 193,0.8)'\r\n      },\r\n      {\r\n        backgroundColor: 'rgba(237, 41, 57,0.2)',\r\n        borderColor: 'rgba(237, 41, 57,1)',\r\n        pointBackgroundColor: 'rgba(237, 41, 57,1)',\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: 'rgba(237, 41, 57,0.8)'\r\n      }];\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.logChannel = GraphComponent.generateRandomString();\r\n\r\n    this.ws = new WebSocket(\"ws://alpharithmic.herokuapp.com/ws/logs/\" + this.logChannel + \"/\");\r\n    this.ws.onmessage = (event) => {\r\n      let msg = JSON.parse(event.data).message;\r\n      this.log = this.log.concat(msg, \"\\n\");\r\n    };\r\n\r\n    if (this.type === 'apple') {\r\n\r\n      this.result.buyAppleResult(this.start, this.end,\r\n        this.numberOfShares, this.capitalBase, this.logChannel).subscribe(response => {\r\n        if (!response) {\r\n          alert(\"Something went wrong!\");\r\n        }\r\n        else {\r\n          this.jobId = response.job_id;\r\n\r\n          this.subscription = interval(3000).subscribe(repeat => {\r\n            this.extractDataFromAPI(this.result.fetchResult(this.jobId));\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    else if (this.type === 'mean-rev') {\r\n\r\n      this.result.meanReversionResult(this.start, this.end,\r\n        this.numberOfShares, this.capitalBase, this.logChannel).subscribe(response => {\r\n        if (!response) {\r\n          alert(\"Something went wrong!\");\r\n        }\r\n        else {\r\n          this.jobId = response.job_id;\r\n\r\n          this.subscription = interval(3000).subscribe(repeat => {\r\n            this.extractDataFromAPI(this.result.fetchResult(this.jobId));\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    else if (this.type === 'rfr') {\r\n\r\n      this.result.randForestRegResult(this.start, this.end,\r\n        this.ticker, this.capitalBase, this.minutes, this.logChannel).subscribe(response => {\r\n          if (!response) {\r\n            alert(\"Something went wrong!\");\r\n          }\r\n\r\n          else {\r\n            this.jobId = response.job_id;\r\n\r\n            this.subscription = interval(3000).subscribe(repeat => {\r\n              this.extractDataFromAPI(this.result.fetchResult(this.jobId));\r\n            });\r\n          }\r\n      });\r\n    }\r\n  }\r\n\r\n  public static dateNumToString(num, date: Date) {\r\n\r\n    date.setTime(num);\r\n\r\n    return date.toDateString().substring(4);\r\n  }\r\n\r\n  private static generateRandomString(): string {\r\n    return Math.random().toString(36).substring(2, 15)\r\n      + Math.random().toString(36).substring(2, 15);\r\n  }\r\n\r\n  private extractDataFromAPI(observable: Observable<any>) {\r\n    observable.subscribe(response => {\r\n\r\n      if (!response) {\r\n        return;\r\n      }\r\n\r\n      else if (!response.done) {\r\n        return;\r\n      }\r\n\r\n      else {\r\n\r\n        this.subscription.unsubscribe();\r\n\r\n        let algoToBench = response.algo_to_benchmark;\r\n        let rollingBeta = response.rolling_beta;\r\n\r\n        let date = new Date();\r\n\r\n        let algo = [];\r\n        let bench = [];\r\n\r\n        for (let point of algoToBench.data.data01) {\r\n          this.xaxis.push(GraphComponent.dateNumToString(point[0], date));\r\n          algo.push(point[1] * 100);\r\n          bench.push(point[2] * 100);\r\n        }\r\n\r\n        this.dataset1.push({\r\n          data: algo,\r\n          label: \"Algorithm Return %\",\r\n          fill: true,\r\n        });\r\n        this.dataset1.push({\r\n          data: bench,\r\n          label: \"Benchmark Return %\",\r\n          fill: false,\r\n        });\r\n\r\n        let beta = [];\r\n\r\n        for (let point of rollingBeta.data.data01) {\r\n          beta.push(point[1] * 100);\r\n        }\r\n\r\n        this.dataset2.push({\r\n          data: beta,\r\n          label: \"Beta\"\r\n        });\r\n\r\n        this.done = true;\r\n\r\n        this.scroll.scrollTo({\r\n          target: \"graph\"\r\n        });\r\n\r\n        if (this.ws) {\r\n          this.ws.close();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n.container {\\r\\n  max-width: 960px;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Custom translucent site header\\r\\n */\\r\\n\\r\\n.site-header {\\r\\n  background-color: rgba(0, 0, 0, .85);\\r\\n  -webkit-backdrop-filter: saturate(180%) blur(20px);\\r\\n}\\r\\n\\r\\n.site-header a {\\r\\n  transition: ease-in-out color .15s;\\r\\n}\\r\\n\\r\\n.site-header a:hover {\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Dummy devices (replace them with your own or something else entirely!)\\r\\n */\\r\\n\\r\\n.product-device {\\r\\n  position: absolute;\\r\\n  right: -5%;\\r\\n  bottom: -25%;\\r\\n  width: 300px;\\r\\n  height: 900px;\\r\\n  background-color: #c50000;\\r\\n  border-radius: 21px;\\r\\n  -webkit-transform: rotate(30deg);\\r\\n  transform: rotate(30deg);\\r\\n}\\r\\n\\r\\n.product-device::before {\\r\\n  position: absolute;\\r\\n  top: 10%;\\r\\n  right: 10px;\\r\\n  bottom: 10%;\\r\\n  left: 10px;\\r\\n  content: \\\"\\\";\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.product-device-2 {\\r\\n  top: -25%;\\r\\n  right: auto;\\r\\n  bottom: 0;\\r\\n  left: -5%;\\r\\n  background-color: #e5e5e5;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Extra utilities\\r\\n */\\r\\n\\r\\n.border-top { border-top: 1px solid }\\r\\n\\r\\n.border-bottom { border-bottom: 1px solid }\\r\\n\\r\\n.box-shadow { box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05); }\\r\\n\\r\\n.flex-equal > * {\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  .flex-md-equal > * {\\r\\n    flex: 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.overflow-hidden { overflow: hidden; }\\r\\n\\r\\n.featurette-divider {\\r\\n  margin: 5rem 0; /* Space out the Bootstrap <hr> more */\\r\\n}\\r\\n\\r\\n/* Thin out the marketing headings */\\r\\n\\r\\n.featurette-heading {\\r\\n  font-weight: 300;\\r\\n  line-height: 1;\\r\\n  letter-spacing: -.05rem;\\r\\n}\\r\\n\\r\\n.featurette-img-size {\\r\\n  height: 300px;\\r\\n  width: 500px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n  <div class=\\\"position-relative overflow-hidden p-3 p-md-5 m-md-3 text-center bg-light\\\">\\r\\n    <div class=\\\"col-md-5 p-lg-5 mx-auto my-5\\\">\\r\\n      <h1 class=\\\"display-4 font-weight-normal\\\">Ultra High Fidelity</h1>\\r\\n      <p class=\\\"lead font-weight-normal\\\">Powered by the Zipline live-trading engine. This\\r\\n      event-driven system provides the most realistic simulation ever for your trading algorithms.</p>\\r\\n      <a class=\\\"btn btn-outline-secondary\\\" href=\\\"#\\\">Learn More</a>\\r\\n    </div>\\r\\n    <div class=\\\"product-device box-shadow d-none d-md-block\\\"></div>\\r\\n    <div class=\\\"product-device product-device-2 box-shadow d-none d-md-block\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"d-md-flex flex-md-equal w-100 my-md-3 pl-md-3\\\">\\r\\n    <div class=\\\"bg-dark mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center text-white overflow-hidden\\\">\\r\\n      <div class=\\\"my-3 p-3\\\">\\r\\n        <h2 class=\\\"display-5\\\">Down to the Minute</h2>\\r\\n        <p class=\\\"lead\\\">Years of minute data for over 1,000 US Equities are available in your playground.\\r\\n        Put your ideas to the test through storm and snow, wind and rain. How will you overcome?</p>\\r\\n      </div>\\r\\n      <div class=\\\"bg-dark mx-auto\\\" style=\\\"width: 80%; height: 300px; border-radius: 21px 21px 0 0;\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"bg-light mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden\\\">\\r\\n      <div class=\\\"my-3 py-3\\\">\\r\\n        <h2 class=\\\"display-5\\\">Explore What's Out There</h2>\\r\\n        <p class=\\\"lead\\\">We've collected and compiled many algorithms for you to explore. With just a click you can test\\r\\n          beginner's strategies to advanced Machine Learning classifiers. Investigate what works best and why.\\r\\n          Batteries are all included.\\r\\n        </p>\\r\\n      </div>\\r\\n      <div class=\\\"bg-light mx-auto\\\" style=\\\"width: 80%; height: 300px; border-radius: 21px 21px 0 0;\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"d-md-flex flex-md-equal w-100 my-md-3 pl-md-3\\\">\\r\\n    <div class=\\\"bg-light mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center overflow-hidden\\\">\\r\\n      <div class=\\\"my-3 p-3\\\">\\r\\n        <h2 class=\\\"display-5\\\">Visualize the Future</h2>\\r\\n        <p class=\\\"lead\\\">Raise the bar with beautiful charts. Derive sharp insights on correlation, trends, and performance.\\r\\n        Compare your results to the benchmark's performance. Learn how to maximize your alpha.</p>\\r\\n      </div>\\r\\n      <div class=\\\"bg-light mx-auto\\\" style=\\\"width: 80%; height: 300px; border-radius: 21px 21px 0 0;\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"mr-md-3 pt-3 px-3 pt-md-5 px-md-5 text-center text-white overflow-hidden\\\" style=\\\"background-color: #c50000\\\">\\r\\n      <div class=\\\"my-3 py-3\\\">\\r\\n        <h2 class=\\\"display-5\\\">Be Inspired to Create</h2>\\r\\n        <p class=\\\"lead\\\">Develop custom algorithms of your own. Using the Lambda Driver system, you can decide what\\r\\n          your algorithm does on the fly. No coding involved.</p>\\r\\n      </div>\\r\\n      <div class=\\\"bg-light mx-auto\\\" style=\\\"width: 80%; height: 300px; border-radius: 21px 21px 0 0;\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <hr class=\\\"featurette-divider\\\">\\r\\n\\r\\n  <div class=\\\"row featurette\\\">\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <h2 class=\\\"featurette-heading\\\">The Naive Class. <span class=\\\"text-muted\\\">Simple yet effective.</span></h2>\\r\\n      <p class=\\\"lead\\\">You choose the stocks and you choose the strategy to use. We handle the rest of the\\r\\n      dirty work. There's nothing so easy yet so powerful than this.</p>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n      <img class=\\\"featurette-image featurette-img-size img-fluid mx-auto\\\" src=\\\"../../assets/background-images/finance-background-1648042.jpg\\\" alt=\\\"Generic placeholder image\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <hr class=\\\"featurette-divider\\\">\\r\\n\\r\\n  <div class=\\\"row featurette\\\">\\r\\n    <div class=\\\"col-md-7 order-md-2\\\">\\r\\n      <h2 class=\\\"featurette-heading\\\">The Advanced Class.  <span class=\\\"text-muted\\\">The entire market in your hands.</span></h2>\\r\\n      <p class=\\\"lead\\\">Don't worry about which stocks to choose. Tell us what you're looking for and we'll do the picking for you.\\r\\n      The Advanced Class will actively search the entire market for the best combination of stocks to hold in your portfolio.</p>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5 order-md-1\\\">\\r\\n      <img class=\\\"featurette-image featurette-img-size img-fluid mx-auto\\\" src=\\\"../../assets/background-images/sc-page-logo-neuralnetwork-pagethumb.jpg\\\" alt=\\\"Generic placeholder image\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <hr class=\\\"featurette-divider\\\">\\r\\n\\r\\n  <div class=\\\"row featurette\\\">\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <h2 class=\\\"featurette-heading\\\">The ML Class. <span class=\\\"text-muted\\\">Leveraging innovation.</span></h2>\\r\\n      <p class=\\\"lead\\\">\\r\\n        This special group of algorithms use the most advanced Machine Learning Classifiers to derive insights and\\r\\n        predictions far beyond the level of other algorithms. See it for yourself.</p>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n      <img class=\\\"featurette-image featurette-img-size img-fluid mx-auto\\\" src=\\\"../../assets/background-images/red_geometry_abstract_background_6819703.jpg\\\" alt=\\\"Generic placeholder image\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-intro',\r\n  templateUrl: './intro.component.html',\r\n  styleUrls: ['./intro.component.css']\r\n})\r\nexport class IntroComponent implements OnInit {\r\n\r\n  public images: string[];\r\n\r\n  constructor() {\r\n    this.images = [\"\"]\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".fixed-header {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  z-index: 2;\\r\\n  width: 100%  !important;\\r\\n}\\r\\n\\r\\n.nav-option {\\r\\n  padding: 0 14px;\\r\\n  background-color: #c50000;\\r\\n  color: white;\\r\\n  outline: 0 none;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar style=\\\"background-color: #c50000\\\" class=\\\"fixed-header\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <button mat-button class=\\\"nav-option\\\" routerLink=\\\"\\\">Alpharithmic Trading</button>\\r\\n    <button mat-button class=\\\"nav-option\\\" routerLink=\\\"/tutorial\\\">Tutorial</button>\\r\\n    <button mat-button class=\\\"nav-option\\\" routerLink=\\\"/algorithms\\\">Algorithms</button>\\r\\n    <button mat-button class=\\\"nav-option\\\" routerLink=\\\"/build\\\">Build Your Own</button>\\r\\n\\r\\n    <div style=\\\"flex: 1 1 auto;\\\"></div>\\r\\n\\r\\n    <button mat-button class=\\\"nav-option\\\"\\r\\n            (click)=\\\"onLearnMoreClick()\\\">Learn More</button>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLearnMoreClick() {\r\n    window.location.href = 'https://github.com/Novacer/alpharithmic-trading#alpharithmic-trading';\r\n  }\r\n\r\n}\r\n","module.exports = \".body {\\r\\n  padding-top: 65px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n  overflow-x: hidden; /* Prevent scroll on narrow devices */\\r\\n}\\r\\n\\r\\nbody {\\r\\n  padding-top: 56px;\\r\\n}\\r\\n\\r\\n.nav-scroller {\\r\\n  position: relative;\\r\\n  z-index: 2;\\r\\n  height: 2.75rem;\\r\\n  overflow-y: hidden;\\r\\n}\\r\\n\\r\\n.nav-scroller .nav {\\r\\n  display: flex;\\r\\n  flex-wrap: nowrap;\\r\\n  padding-bottom: 1rem;\\r\\n  margin-top: -1px;\\r\\n  overflow-x: auto;\\r\\n  color: rgba(255, 255, 255, .75);\\r\\n  text-align: center;\\r\\n  white-space: nowrap;\\r\\n  -webkit-overflow-scrolling: touch;\\r\\n}\\r\\n\\r\\n.nav-underline .nav-link {\\r\\n  padding-top: .75rem;\\r\\n  padding-bottom: .75rem;\\r\\n  font-size: .875rem;\\r\\n  color: var(--secondary);\\r\\n}\\r\\n\\r\\n.nav-underline .nav-link:hover {\\r\\n  color: var(--blue);\\r\\n}\\r\\n\\r\\n.nav-underline .active {\\r\\n  font-weight: 500;\\r\\n  color: var(--gray-dark);\\r\\n}\\r\\n\\r\\n.text-white-50 { color: rgba(255, 255, 255, .5); }\\r\\n\\r\\n.border-bottom { border-bottom: 1px solid #e5e5e5; }\\r\\n\\r\\n.box-shadow { box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05); }\\r\\n\\r\\n.lh-100 { line-height: 1; }\\r\\n\\r\\n.lh-125 { line-height: 1.25; }\\r\\n\\r\\n.lh-150 { line-height: 1.5; }\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"body\\\">\\r\\n    <main role=\\\"main\\\" class=\\\"container\\\">\\r\\n      <div class=\\\"d-flex align-items-center p-3 my-3 text-white-50 bg-dark rounded box-shadow\\\">\\r\\n        <img class=\\\"mr-3\\\" src=\\\"../../assets/icons/algo.png\\\" alt=\\\"\\\" width=\\\"48\\\" height=\\\"48\\\">\\r\\n        <div class=\\\"lh-100\\\">\\r\\n          <h6 class=\\\"mb-0 text-white lh-100\\\">Algorithms</h6>\\r\\n          <small>Explore what's out there</small>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"my-3 p-3 bg-white rounded box-shadow\\\">\\r\\n        <div class=\\\"border-bottom border-gray pb-2 mb-0\\\">\\r\\n          <h6>Recently Added</h6>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=6f42c1&fg=6f42c1&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Random Forest Regression</strong>\\r\\n              <a [routerLink]=\\\"['/algorithms/random-forest-regression']\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Train a Random Forest Regression on the last 400 days of price changes.\\r\\n            Predict the future price change, and trade on this prediction.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=e83e8c&fg=e83e8c&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Mean Reversion</strong>\\r\\n              <a [routerLink]=\\\"['/algorithms/mean-reversion']\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Every 20 days, filter out only the top 1% of stocks by Average Dollar Volume.\\r\\n            Buy any stock below the Lower Bollinger Band, and sell any that are above the Upper Bollinger Band.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Buy Apple Everyday</strong>\\r\\n              <a [routerLink]=\\\"['/algorithms/buy-apple']\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Buy some shares of Apple (AAPL) at market open everyday until you run out of money.\\r\\n              How much return can you make?</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <small class=\\\"d-block text-right mt-3\\\">\\r\\n          <a href=\\\"#\\\">All updates</a>\\r\\n        </small>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"my-3 p-3 bg-white rounded box-shadow\\\">\\r\\n        <div class=\\\"border-bottom border-gray pb-2 mb-0\\\">\\r\\n          <h6 style=\\\"display: inline\\\">Naive Algorithms</h6>\\r\\n          <p style=\\\"display: inline\\\"> — Tracks and trades a predefined set of stocks based off a strategy</p>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Buy Apple Everyday</strong>\\r\\n              <a [routerLink]=\\\"['/algorithms/buy-apple']\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Buy some shares of Apple (AAPL) at market open everyday until you run out of money.\\r\\n              How much return can you make?</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Algorithm Name</strong>\\r\\n              <a href=\\\"#\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Description</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Algorithm Name</strong>\\r\\n              <a href=\\\"#\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Description</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <small class=\\\"d-block text-right mt-3\\\">\\r\\n          <a href=\\\"#\\\">All suggestions</a>\\r\\n        </small>\\r\\n      </div>\\r\\n      <div class=\\\"my-3 p-3 bg-white rounded box-shadow\\\">\\r\\n        <div class=\\\"border-bottom border-gray pb-2 mb-0\\\">\\r\\n          <h6 style=\\\"display: inline\\\">Advanced Algorithms</h6>\\r\\n          <p style=\\\"display: inline\\\"> — Dynamically searches the entire market\\r\\n            for the best combination of stocks to hold together in a portfolio</p>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=e83e8c&fg=e83e8c&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Mean Reversion</strong>\\r\\n              <a [routerLink]=\\\"['/algorithms/mean-reversion']\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Every 20 days, filter out only the top 1% of stocks by Average Dollar Volume.\\r\\n            Buy any stock below the Lower Bollinger Band, and sell any that are above the Upper Bollinger Band.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Algorithm Name</strong>\\r\\n              <a href=\\\"#\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Description</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Algorithm Name</strong>\\r\\n              <a href=\\\"#\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Description</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <small class=\\\"d-block text-right mt-3\\\">\\r\\n          <a href=\\\"#\\\">All suggestions</a>\\r\\n        </small>\\r\\n      </div>\\r\\n      <div class=\\\"my-3 p-3 bg-white rounded box-shadow\\\">\\r\\n        <div class=\\\"border-bottom border-gray pb-2 mb-0\\\">\\r\\n          <h6 style=\\\"display: inline\\\">Machine Learning Algorithms</h6>\\r\\n          <p style=\\\"display: inline\\\"> — A special class of algorithms that leverage various\\r\\n            Machine Learning classifiers for making predictions</p>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=6f42c1&fg=6f42c1&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Random Forest Regression</strong>\\r\\n              <a [routerLink]=\\\"['/algorithms/random-forest-regression']\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Train a Random Forest Regression on the last 400 days of price changes.\\r\\n            Predict the future price change, and trade on this prediction.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Algorithm Name</strong>\\r\\n              <a href=\\\"#\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Description</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"media text-muted pt-3\\\">\\r\\n          <img data-src=\\\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\\\" alt=\\\"\\\" class=\\\"mr-2 rounded\\\">\\r\\n          <div class=\\\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\\\">\\r\\n            <div class=\\\"d-flex justify-content-between align-items-center w-100\\\">\\r\\n              <strong class=\\\"text-gray-dark\\\">Algorithm Name</strong>\\r\\n              <a href=\\\"#\\\">Test it out</a>\\r\\n            </div>\\r\\n            <span class=\\\"d-block\\\">Description</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <small class=\\\"d-block text-right mt-3\\\">\\r\\n          <a href=\\\"#\\\">All suggestions</a>\\r\\n        </small>\\r\\n      </div>\\r\\n    </main>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select-algo',\r\n  templateUrl: './select-algo.component.html',\r\n  styleUrls: ['./select-algo.component.css']\r\n})\r\nexport class SelectAlgoComponent implements OnInit {\r\n\r\n  constructor() {\r\n    console.log(\"Hi\");\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResultService {\r\n\r\n  private readonly buyAppleURL : string;\r\n  private readonly meanReversionURL : string;\r\n  private readonly randForestRegURL : string;\r\n  private readonly fetchResultURL : string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.buyAppleURL = \"/api/post/buy-apple\";\r\n    this.meanReversionURL = \"/api/post/mean-reversion\";\r\n    this.randForestRegURL = \"/api/post/random-forest-regression\";\r\n    this.fetchResultURL = \"/api/post/result\";\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable with the result of buying Apple Shares everyday\r\n   * @param {string} start the start date (in YYYY-MM-DD)\r\n   * @param {string} end the end date (in YYYY-MM-DD)\r\n   * @param {number} shares the number of shares to buy each day\r\n   * @param {number} capitalBase the total amount of money you have\r\n   * @param {string} logChannel the channel for which logs will be pushed to\r\n   */\r\n  buyAppleResult(start: string, end: string,\r\n                 shares: number, capitalBase: number,\r\n                 logChannel: string) : Observable<any> {\r\n\r\n    let body = {\r\n      start: start,\r\n      end: end,\r\n      shares: shares,\r\n      capital_base: capitalBase,\r\n      log_channel: logChannel\r\n    };\r\n\r\n    return this.http.post(this.buyAppleURL, body);\r\n  }\r\n\r\n\r\n  meanReversionResult(start: string, end: string,\r\n                      shares: number, capitalBase: number,\r\n                      logChannel: string) :Observable<any> {\r\n\r\n    let body = {\r\n      start: start,\r\n      end: end,\r\n      shares: shares,\r\n      capital_base: capitalBase,\r\n      log_channel: logChannel\r\n    };\r\n\r\n    return this.http.post(this.meanReversionURL, body);\r\n  }\r\n\r\n\r\n  randForestRegResult(start: string, end: string,\r\n                      ticker: string, capitalBase: number,\r\n                      minutes: number, logChannel: string) : Observable<any> {\r\n\r\n    let body = {\r\n      start: start,\r\n      end: end,\r\n      ticker: ticker,\r\n      minutes: minutes,\r\n      capital_base: capitalBase,\r\n      log_channel: logChannel\r\n    };\r\n\r\n    return this.http.post(this.randForestRegURL, body);\r\n  }\r\n\r\n  fetchResult(jobId : string) {\r\n\r\n    let body = {\r\n      job_id: jobId.substring(7)\r\n    };\r\n\r\n    return this.http.post(this.fetchResultURL, body);\r\n  }\r\n}\r\n","module.exports = \".body {\\r\\n  padding-top: 65px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"body\\\">\\n    <h5>\\n      Coming Soon!\\n    </h5>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tutorial',\n  templateUrl: './tutorial.component.html',\n  styleUrls: ['./tutorial.component.css']\n})\nexport class TutorialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}